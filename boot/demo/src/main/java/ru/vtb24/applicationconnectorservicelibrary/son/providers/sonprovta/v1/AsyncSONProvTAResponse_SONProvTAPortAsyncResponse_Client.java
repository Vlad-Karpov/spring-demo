
package ru.vtb24.applicationconnectorservicelibrary.son.providers.sonprovta.v1;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2019-10-07T14:47:51.403+03:00
 * Generated source version: 3.2.1
 * 
 */
public final class AsyncSONProvTAResponse_SONProvTAPortAsyncResponse_Client {

    private static final QName SERVICE_NAME = new QName("http://www.vtb24.ru/ApplicationConnectorServiceLibrary/SON/Providers/SONProvTA/V1", "SONProvTAService");

    private AsyncSONProvTAResponse_SONProvTAPortAsyncResponse_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SONProvTAService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SONProvTAService ss = new SONProvTAService(wsdlURL, SERVICE_NAME);
        AsyncSONProvTAResponse port = ss.getSONProvTAPortAsyncResponse();  
        
        {
        System.out.println("Invoking asyncSONResponse...");
        ru.vtb24.applicationconnectorservicelibrary.son.providers.sonprovta.v1.SONRespMsgType _asyncSONResponse_sonResponseEBM = null;
        port.asyncSONResponse(_asyncSONResponse_sonResponseEBM);


        }

        System.exit(0);
    }

}
